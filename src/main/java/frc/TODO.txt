NEW TODO:
Arm Control:
> SetPoints 
> Manual control
> Saftey Constraints

Vision:
> Lock to game piece, and drive to distance
> Align rotation (and position?) to Apriltag
> Center on retro reflective target?

Auto:
> Path planner paths, and event map
> Quick auto string parsing
> Testing

Leds:
> Signal to human player cone/cube












GOOGLE DOC:
https://docs.google.com/document/d/1lOLgFrMKxZSqBGImpj4zKhlCp49UXaNsPP__Qa6WMxo/edit 


TODO:
> Arm control
-> PID + feedforward
-> Auto Setpoint (X, Y)
--> Integrate with drivetrain
-> Teleop setPositionConversionFactor
--> Button Map (DONE)
-> Adjust Extension Timing Based on Pressure

> Throttled Stick Input For Teleop

> LED Control

> End effector control?

> Quick Auto Planner?
-> Java app, send data to network tables

IN PROGRESS:
> Limelight Vision
-> Multiple Pipelines
-> Drive to Distance
-> Set Rotation 
-> Align to Apriltag
-> Auto Align to location to place game piece

> Pathfollower
-> Execute Events

FUNCTIONAL:
> 346 Swerve Drive*
-> Needs bugfix for alignment on startup

COMMANDS:
> Drive (Robot and Field Oriented) FUNCTIONAL
> Auto
-> Follow a path 
--> Continuous Collision Avoidance
-> Pick up Targets from ground (Game Piece Tracking)
--> Detect Game Piece
--> Align (Angle then Distance)
--> Move Arm to correct location and distance
---> Command for each side?
--> Clamp End effector
-> Place a target
--> Alignment 
--> Arm Control
--> Drop target
-> Return arm to home
--> Close to limit switch (within frame perimeter)
-> Balance
--> Retest PID
--> Trapezoidal PID Control?
--> Bang Bang Controller

SAFETY FUNCTIONALITY:
> Voltage spike detection
> Acceleration Spike detection
-> Back up after collision with other robot
> Detect sudden change in pitch or roll
-> Drive to counteract
> Detect falling off edge during balancing (Stop Driving)

> Monitor Arm Voltage
> Rubber Stoppers on Arm
> Touch sensor at end of arm
> Rotation Limit Switches

CONTROLS:


